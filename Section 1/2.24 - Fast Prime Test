#lang sicp
(define (fast-prime? n)
  (define (next x)
    (if (even? x)
        (+ x 1)
        (+ x 2))
    )
  (define (divides x n)
    (= (remainder n x) 0))
  (define (test x)
    (cond ((> (* x x) n) true )
          ((divides x n) false)
          (else (test (next x)))
          )
    
    )
  (test 2)
  )


(define (timed-prime-test n)
  (newline)
  (display n)
  (start-prime-test n (runtime)))
(define (start-prime-test n start-time)
  (if (fast-prime? n)
      (report-prime (- (runtime) start-time))))
(define (report-prime elapsed-time)
  (display " *** ")
  (display elapsed-time))
